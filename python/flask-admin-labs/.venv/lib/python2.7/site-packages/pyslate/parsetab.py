
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftQUESTIONrightPLAINTEXTDOL_LBRACE PERC_LBRACE COLON PLAINTEXT RBRACE PIPE QUESTION ATexpression : plaintext expression\n                      | variants expression\n                      | inner_tag expression\n                      | pholder_tag expression\n                      | emptypholder_tag : PERC_LBRACE plaintext decorators RBRACEpholder_tag : PERC_LBRACE variants RBRACE\n                       | PERC_LBRACE plaintext COLON variants RBRACE variants : variant PIPE variants\n                    | variantvariant : plaintext QUESTION plaintextvariant : plaintext QUESTIONinner_tag : DOL_LBRACE inner_tag_name RBRACE\n                     | DOL_LBRACE plaintext COLON inner_tag_name RBRACEinner_tag_name : plaintext inner_tag_cont\n                          | pholder_tag inner_tag_continner_tag_cont : plaintext inner_tag_cont\n                          | pholder_tag inner_tag_cont\n                          | decoratorsdecorators : AT plaintext decorators\n                     | emptyplaintext : PLAINTEXT plaintext\n                     | PLAINTEXTempty : '
    
_lr_action_items = {'RBRACE':([3,5,12,16,17,18,20,21,22,23,25,27,28,30,31,32,33,34,35,38,39,40,41,42,43,44,45,46,],[-10,-23,-12,-22,-24,30,-24,-24,37,-11,-9,39,-21,-7,-24,-24,-16,-19,-15,45,-6,-24,-18,-17,-24,47,-8,-20,]),'PLAINTEXT':([0,1,2,3,4,5,6,7,10,12,14,16,20,21,23,25,26,29,30,31,32,36,37,39,43,45,47,],[5,5,5,-10,5,5,5,5,5,5,5,-22,5,5,-11,-9,5,5,-7,5,5,5,-13,-6,5,-8,-14,]),'QUESTION':([2,5,16,17,24,],[12,-23,-22,12,12,]),'PIPE':([3,5,12,16,23,],[14,-23,-12,-22,-11,]),'COLON':([5,16,17,21,],[-23,-22,26,36,]),'PERC_LBRACE':([0,1,2,3,4,5,7,10,12,16,20,21,23,25,30,31,32,36,37,39,43,45,47,],[6,6,6,-10,6,-23,6,6,-12,-22,6,6,-11,-9,-7,6,6,6,-13,-6,6,-8,-14,]),'AT':([5,16,17,20,21,30,31,32,39,40,43,45,],[-23,-22,29,29,29,-7,29,29,-6,29,29,-8,]),'$end':([0,1,2,3,4,5,7,8,9,11,12,13,15,16,19,23,25,30,37,39,45,47,],[-24,-24,-24,-10,-24,-23,-24,0,-5,-4,-12,-1,-3,-22,-2,-11,-9,-7,-13,-6,-8,-14,]),'DOL_LBRACE':([0,1,2,3,4,5,7,12,16,23,25,30,37,39,45,47,],[10,10,10,-10,10,-23,10,-12,-22,-11,-9,-7,-13,-6,-8,-14,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'pholder_tag':([0,1,2,4,7,10,20,21,31,32,36,43,],[1,1,1,1,1,20,31,31,31,31,20,31,]),'plaintext':([0,1,2,4,5,6,7,10,12,14,20,21,26,29,31,32,36,43,],[2,2,2,2,16,17,2,21,23,24,32,32,24,40,32,32,43,32,]),'decorators':([17,20,21,31,32,40,43,],[27,34,34,34,34,46,34,]),'variant':([0,1,2,4,6,7,14,26,],[3,3,3,3,3,3,3,3,]),'inner_tag':([0,1,2,4,7,],[4,4,4,4,4,]),'inner_tag_cont':([20,21,31,32,43,],[33,35,41,42,35,]),'inner_tag_name':([10,36,],[22,44,]),'variants':([0,1,2,4,6,7,14,26,],[7,7,7,7,18,7,25,38,]),'expression':([0,1,2,4,7,],[8,11,13,15,19,]),'empty':([0,1,2,4,7,17,20,21,31,32,40,43,],[9,9,9,9,9,28,28,28,28,28,28,28,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> plaintext expression','expression',2,'p_expression','parser.py',101),
  ('expression -> variants expression','expression',2,'p_expression','parser.py',102),
  ('expression -> inner_tag expression','expression',2,'p_expression','parser.py',103),
  ('expression -> pholder_tag expression','expression',2,'p_expression','parser.py',104),
  ('expression -> empty','expression',1,'p_expression','parser.py',105),
  ('pholder_tag -> PERC_LBRACE plaintext decorators RBRACE','pholder_tag',4,'p_pholder_tag','parser.py',112),
  ('pholder_tag -> PERC_LBRACE variants RBRACE','pholder_tag',3,'p_variants_tag','parser.py',116),
  ('pholder_tag -> PERC_LBRACE plaintext COLON variants RBRACE','pholder_tag',5,'p_variants_tag','parser.py',117),
  ('variants -> variant PIPE variants','variants',3,'p_variants_variant_next','parser.py',124),
  ('variants -> variant','variants',1,'p_variants_variant_next','parser.py',125),
  ('variant -> plaintext QUESTION plaintext','variant',3,'p_variants_variant_last','parser.py',132),
  ('variant -> plaintext QUESTION','variant',2,'p_variants_variant_part_next','parser.py',137),
  ('inner_tag -> DOL_LBRACE inner_tag_name RBRACE','inner_tag',3,'p_inner_tag','parser.py',142),
  ('inner_tag -> DOL_LBRACE plaintext COLON inner_tag_name RBRACE','inner_tag',5,'p_inner_tag','parser.py',143),
  ('inner_tag_name -> plaintext inner_tag_cont','inner_tag_name',2,'p_inner_tag_name','parser.py',150),
  ('inner_tag_name -> pholder_tag inner_tag_cont','inner_tag_name',2,'p_inner_tag_name','parser.py',151),
  ('inner_tag_cont -> plaintext inner_tag_cont','inner_tag_cont',2,'p_inner_tag_cont','parser.py',155),
  ('inner_tag_cont -> pholder_tag inner_tag_cont','inner_tag_cont',2,'p_inner_tag_cont','parser.py',156),
  ('inner_tag_cont -> decorators','inner_tag_cont',1,'p_inner_tag_cont','parser.py',157),
  ('decorators -> AT plaintext decorators','decorators',3,'p_decorators','parser.py',164),
  ('decorators -> empty','decorators',1,'p_decorators','parser.py',165),
  ('plaintext -> PLAINTEXT plaintext','plaintext',2,'p_plaintext','parser.py',172),
  ('plaintext -> PLAINTEXT','plaintext',1,'p_plaintext','parser.py',173),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',179),
]
